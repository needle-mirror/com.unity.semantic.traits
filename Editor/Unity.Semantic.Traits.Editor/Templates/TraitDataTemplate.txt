using System;
using System.Collections.Generic;
using Unity.Semantic.Traits;
using Unity.Collections;
using Unity.Entities;

namespace {{ namespace }}
{
    [Serializable]
    public partial struct {{ name }}Data : ITraitData, IEquatable<{{ name }}Data>
    {
        {{- for field in fields }}
        public {{ field.field_type }} {{ field.field_name }};
        {{- end }}

        public bool Equals({{ name }}Data other)
        {
        {{- if fields.empty? }}
            return true;
        {{- else }}
        {{ for field in fields }}
            {{- if for.index == 0 }}    return {{ else }} && {{ end }}
                {{- field.field_name }}.Equals(other.{{ field.field_name }})
            {{- end }};
        {{- end }}
        }

        public override string ToString()
        {
        {{- if fields.empty? }}
            return $"{{ name }}";
        {{- else }}
            return $"{{ name }}:{{ for field in fields }} { {{- field.field_name -}} }{{ end -}}";
        {{- end }}
        }
    }
}
